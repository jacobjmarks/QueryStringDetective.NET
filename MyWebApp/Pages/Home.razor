@page "/"

@using Microsoft.AspNetCore.Http
@using Microsoft.Extensions.Options
@using Microsoft.Extensions.Primitives

@implements IDisposable

@inject AppConfig appConfig

<PageTitle>Home</PageTitle>

<h1>.NET QS</h1>

<input @bind="CurrentInputValue" @bind:event="oninput" @bind:after="InputOnChange" />

<pre>@bindingResults</pre>

@code {
    private string? CurrentInputValue { get; set; }

    private readonly HttpClient httpClient = new();
    private readonly TimeSpan minRequestInterval = TimeSpan.FromSeconds(1);
    private DateTime lastRequestAt = DateTime.MinValue;
    private string? lastRequestedInputValue;

    private string? bindingResults;

    private async Task InputOnChange()
    {
        if (CurrentInputValue == null)
            return;

        if (DateTime.Now - lastRequestAt < minRequestInterval)
        {
            if (CurrentInputValue != lastRequestedInputValue)
            {
                await Task.Delay(50);
                await InputOnChange();
            }

            return;
        }

        lastRequestAt = DateTime.Now;
        await GetBindingResultsAsync(CurrentInputValue);
    }

    private async Task GetBindingResultsAsync(string inputValue)
    {
        lastRequestedInputValue = inputValue;
        var qs = QueryString.Create("q", "?q=" + inputValue);
        using var response = await httpClient.GetAsync(appConfig.AzureFunctionUrl + qs);
        response.EnsureSuccessStatusCode();
        var responseContent = await response.Content.ReadAsStringAsync();
        bindingResults = responseContent;
    }

    public void Dispose()
    {
        httpClient.Dispose();
    }
}
